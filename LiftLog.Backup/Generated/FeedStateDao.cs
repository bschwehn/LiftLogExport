// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Models/FeedStateDao.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LiftLog.Ui.Models {

  /// <summary>Holder for reflection information generated from Models/FeedStateDao.proto</summary>
  public static partial class FeedStateDaoReflection {

    #region Descriptor
    /// <summary>File descriptor for Models/FeedStateDao.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeedStateDaoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlNb2RlbHMvRmVlZFN0YXRlRGFvLnByb3RvEhFMaWZ0TG9nLlVpLk1vZGVs",
            "cxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGhJNb2RlbHMvVXRpbHMucHJvdG8aMk1v",
            "ZGVscy9TZXNzaW9uSGlzdG9yeURhby9TZXNzaW9uSGlzdG9yeURhb1YyLnBy",
            "b3RvGjZNb2RlbHMvU2Vzc2lvbkJsdWVwcmludERhby9TZXNzaW9uQmx1ZXBy",
            "aW50RGFvVjIucHJvdG8aFk1vZGVscy9Vc2VyRXZlbnQucHJvdG8i7QIKEUZl",
            "ZWRJZGVudGl0eURhb1YxEiYKAmlkGAEgASgLMhouTGlmdExvZy5VaS5Nb2Rl",
            "bHMuVXVpZERhbxIsCgZsb29rdXAYDCABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSDwoHYWVzX2tleRgCIAEoDBISCgpwdWJsaWNfa2V5GAkg",
            "ASgMEhMKC3ByaXZhdGVfa2V5GAogASgMEhAKCHBhc3N3b3JkGAQgASgJEi8K",
            "BG5hbWUYBSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWVIAIgB",
            "ARIcCg9wcm9maWxlX3BpY3R1cmUYBiABKAxIAYgBARIaChJwdWJsaXNoX2Jv",
            "ZHl3ZWlnaHQYByABKAgSFAoMcHVibGlzaF9wbGFuGAggASgIEhgKEHB1Ymxp",
            "c2hfd29ya291dHMYCyABKAhCBwoFX25hbWVCEgoQX3Byb2ZpbGVfcGljdHVy",
            "ZSLmAwoNRmVlZFVzZXJEYW9WMRImCgJpZBgBIAEoCzIaLkxpZnRMb2cuVWku",
            "TW9kZWxzLlV1aWREYW8SLAoGbG9va3VwGAkgASgLMhwuZ29vZ2xlLnByb3Rv",
            "YnVmLlN0cmluZ1ZhbHVlEhIKCnB1YmxpY19rZXkYCCABKAwSLwoEbmFtZRgC",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUgAiAEBEjMKCG5p",
            "Y2tuYW1lGAYgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlSAGI",
            "AQESPgoMY3VycmVudF9wbGFuGAMgASgLMiMuTGlmdExvZy5VaS5Nb2RlbHMu",
            "Q3VycmVudFBsYW5EYW9WMUgCiAEBEhwKD3Byb2ZpbGVfcGljdHVyZRgEIAEo",
            "DEgDiAEBEhQKB2Flc19rZXkYBSABKAxIBIgBARI4Cg1mb2xsb3dfc2VjcmV0",
            "GAcgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlSAWIAQFCBwoF",
            "X25hbWVCCwoJX25pY2tuYW1lQg8KDV9jdXJyZW50X3BsYW5CEgoQX3Byb2Zp",
            "bGVfcGljdHVyZUIKCghfYWVzX2tleUIQCg5fZm9sbG93X3NlY3JldCJiChBD",
            "dXJyZW50UGxhbkRhb1YxEk4KCHNlc3Npb25zGAEgAygLMjwuTGlmdExvZy5V",
            "aS5Nb2RlbHMuU2Vzc2lvbkJsdWVwcmludERhby5TZXNzaW9uQmx1ZXByaW50",
            "RGFvVjIilgIKDUZlZWRJdGVtRGFvVjESKwoHdXNlcl9pZBgBIAEoCzIaLkxp",
            "ZnRMb2cuVWkuTW9kZWxzLlV1aWREYW8SLAoIZXZlbnRfaWQYAiABKAsyGi5M",
            "aWZ0TG9nLlVpLk1vZGVscy5VdWlkRGFvEi0KCXRpbWVzdGFtcBgDIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKgoGZXhwaXJ5GAQgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJECgdzZXNzaW9uGAUgASgLMjEu",
            "TGlmdExvZy5VaS5Nb2RlbHMuU2Vzc2lvbkhpc3RvcnlEYW8uU2Vzc2lvbkRh",
            "b1YySABCCQoHcGF5bG9hZCL/AgoORmVlZFN0YXRlRGFvVjESNAoKZmVlZF9p",
            "dGVtcxgBIAMoCzIgLkxpZnRMb2cuVWkuTW9kZWxzLkZlZWRJdGVtRGFvVjES",
            "OAoOZm9sbG93ZWRfdXNlcnMYAiADKAsyIC5MaWZ0TG9nLlVpLk1vZGVscy5G",
            "ZWVkVXNlckRhb1YxEjsKCGlkZW50aXR5GAMgASgLMiQuTGlmdExvZy5VaS5N",
            "b2RlbHMuRmVlZElkZW50aXR5RGFvVjFIAIgBARI7Cg9mb2xsb3dfcmVxdWVz",
            "dHMYBCADKAsyIi5MaWZ0TG9nLlVpLk1vZGVscy5JbmJveE1lc3NhZ2VEYW8S",
            "MwoJZm9sbG93ZXJzGAUgAygLMiAuTGlmdExvZy5VaS5Nb2RlbHMuRmVlZFVz",
            "ZXJEYW9WMRI7Chd1bnB1Ymxpc2hlZF9zZXNzaW9uX2lkcxgGIAMoCzIaLkxp",
            "ZnRMb2cuVWkuTW9kZWxzLlV1aWREYW9CCwoJX2lkZW50aXR5SgQIBxAIYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::LiftLog.Ui.Models.UtilsReflection.Descriptor, global::LiftLog.Ui.Models.SessionHistoryDao.SessionHistoryDaoV2Reflection.Descriptor, global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2Reflection.Descriptor, global::LiftLog.Ui.Models.UserEventReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LiftLog.Ui.Models.FeedIdentityDaoV1), global::LiftLog.Ui.Models.FeedIdentityDaoV1.Parser, new[]{ "Id", "Lookup", "AesKey", "PublicKey", "PrivateKey", "Password", "Name", "ProfilePicture", "PublishBodyweight", "PublishPlan", "PublishWorkouts" }, new[]{ "Name", "ProfilePicture" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiftLog.Ui.Models.FeedUserDaoV1), global::LiftLog.Ui.Models.FeedUserDaoV1.Parser, new[]{ "Id", "Lookup", "PublicKey", "Name", "Nickname", "CurrentPlan", "ProfilePicture", "AesKey", "FollowSecret" }, new[]{ "Name", "Nickname", "CurrentPlan", "ProfilePicture", "AesKey", "FollowSecret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiftLog.Ui.Models.CurrentPlanDaoV1), global::LiftLog.Ui.Models.CurrentPlanDaoV1.Parser, new[]{ "Sessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiftLog.Ui.Models.FeedItemDaoV1), global::LiftLog.Ui.Models.FeedItemDaoV1.Parser, new[]{ "UserId", "EventId", "Timestamp", "Expiry", "Session" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LiftLog.Ui.Models.FeedStateDaoV1), global::LiftLog.Ui.Models.FeedStateDaoV1.Parser, new[]{ "FeedItems", "FollowedUsers", "Identity", "FollowRequests", "Followers", "UnpublishedSessionIds" }, new[]{ "Identity" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FeedIdentityDaoV1 : pb::IMessage<FeedIdentityDaoV1> {
    private static readonly pb::MessageParser<FeedIdentityDaoV1> _parser = new pb::MessageParser<FeedIdentityDaoV1>(() => new FeedIdentityDaoV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedIdentityDaoV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiftLog.Ui.Models.FeedStateDaoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedIdentityDaoV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedIdentityDaoV1(FeedIdentityDaoV1 other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      Lookup = other.Lookup;
      aesKey_ = other.aesKey_;
      publicKey_ = other.publicKey_;
      privateKey_ = other.privateKey_;
      password_ = other.password_;
      Name = other.Name;
      profilePicture_ = other.profilePicture_;
      publishBodyweight_ = other.publishBodyweight_;
      publishPlan_ = other.publishPlan_;
      publishWorkouts_ = other.publishWorkouts_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedIdentityDaoV1 Clone() {
      return new FeedIdentityDaoV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LiftLog.Ui.Models.UuidDao id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.UuidDao Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "lookup" field.</summary>
    public const int LookupFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_lookup_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string lookup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lookup {
      get { return lookup_; }
      set {
        lookup_ = value;
      }
    }


    /// <summary>Field number for the "aes_key" field.</summary>
    public const int AesKeyFieldNumber = 2;
    private pb::ByteString aesKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AesKey {
      get { return aesKey_; }
      set {
        aesKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 9;
    private pb::ByteString publicKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 10;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 4;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "profile_picture" field.</summary>
    public const int ProfilePictureFieldNumber = 6;
    private pb::ByteString profilePicture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProfilePicture {
      get { return profilePicture_ ?? pb::ByteString.Empty; }
      set {
        profilePicture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profile_picture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfilePicture {
      get { return profilePicture_ != null; }
    }
    /// <summary>Clears the value of the "profile_picture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfilePicture() {
      profilePicture_ = null;
    }

    /// <summary>Field number for the "publish_bodyweight" field.</summary>
    public const int PublishBodyweightFieldNumber = 7;
    private bool publishBodyweight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PublishBodyweight {
      get { return publishBodyweight_; }
      set {
        publishBodyweight_ = value;
      }
    }

    /// <summary>Field number for the "publish_plan" field.</summary>
    public const int PublishPlanFieldNumber = 8;
    private bool publishPlan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PublishPlan {
      get { return publishPlan_; }
      set {
        publishPlan_ = value;
      }
    }

    /// <summary>Field number for the "publish_workouts" field.</summary>
    public const int PublishWorkoutsFieldNumber = 11;
    private bool publishWorkouts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PublishWorkouts {
      get { return publishWorkouts_; }
      set {
        publishWorkouts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedIdentityDaoV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedIdentityDaoV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Lookup != other.Lookup) return false;
      if (AesKey != other.AesKey) return false;
      if (PublicKey != other.PublicKey) return false;
      if (PrivateKey != other.PrivateKey) return false;
      if (Password != other.Password) return false;
      if (Name != other.Name) return false;
      if (ProfilePicture != other.ProfilePicture) return false;
      if (PublishBodyweight != other.PublishBodyweight) return false;
      if (PublishPlan != other.PublishPlan) return false;
      if (PublishWorkouts != other.PublishWorkouts) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (lookup_ != null) hash ^= Lookup.GetHashCode();
      if (AesKey.Length != 0) hash ^= AesKey.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (HasProfilePicture) hash ^= ProfilePicture.GetHashCode();
      if (PublishBodyweight != false) hash ^= PublishBodyweight.GetHashCode();
      if (PublishPlan != false) hash ^= PublishPlan.GetHashCode();
      if (PublishWorkouts != false) hash ^= PublishWorkouts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (AesKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(AesKey);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Password);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (HasProfilePicture) {
        output.WriteRawTag(50);
        output.WriteBytes(ProfilePicture);
      }
      if (PublishBodyweight != false) {
        output.WriteRawTag(56);
        output.WriteBool(PublishBodyweight);
      }
      if (PublishPlan != false) {
        output.WriteRawTag(64);
        output.WriteBool(PublishPlan);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(PublicKey);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(PrivateKey);
      }
      if (PublishWorkouts != false) {
        output.WriteRawTag(88);
        output.WriteBool(PublishWorkouts);
      }
      if (lookup_ != null) {
        _single_lookup_codec.WriteTagAndValue(output, Lookup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (lookup_ != null) {
        size += _single_lookup_codec.CalculateSizeWithTag(Lookup);
      }
      if (AesKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AesKey);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (HasProfilePicture) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProfilePicture);
      }
      if (PublishBodyweight != false) {
        size += 1 + 1;
      }
      if (PublishPlan != false) {
        size += 1 + 1;
      }
      if (PublishWorkouts != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedIdentityDaoV1 other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LiftLog.Ui.Models.UuidDao();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.lookup_ != null) {
        if (lookup_ == null || other.Lookup != "") {
          Lookup = other.Lookup;
        }
      }
      if (other.AesKey.Length != 0) {
        AesKey = other.AesKey;
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.HasProfilePicture) {
        ProfilePicture = other.ProfilePicture;
      }
      if (other.PublishBodyweight != false) {
        PublishBodyweight = other.PublishBodyweight;
      }
      if (other.PublishPlan != false) {
        PublishPlan = other.PublishPlan;
      }
      if (other.PublishWorkouts != false) {
        PublishWorkouts = other.PublishWorkouts;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LiftLog.Ui.Models.UuidDao();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            AesKey = input.ReadBytes();
            break;
          }
          case 34: {
            Password = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 50: {
            ProfilePicture = input.ReadBytes();
            break;
          }
          case 56: {
            PublishBodyweight = input.ReadBool();
            break;
          }
          case 64: {
            PublishPlan = input.ReadBool();
            break;
          }
          case 74: {
            PublicKey = input.ReadBytes();
            break;
          }
          case 82: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 88: {
            PublishWorkouts = input.ReadBool();
            break;
          }
          case 98: {
            string value = _single_lookup_codec.Read(input);
            if (lookup_ == null || value != "") {
              Lookup = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedUserDaoV1 : pb::IMessage<FeedUserDaoV1> {
    private static readonly pb::MessageParser<FeedUserDaoV1> _parser = new pb::MessageParser<FeedUserDaoV1>(() => new FeedUserDaoV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedUserDaoV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiftLog.Ui.Models.FeedStateDaoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedUserDaoV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedUserDaoV1(FeedUserDaoV1 other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      Lookup = other.Lookup;
      publicKey_ = other.publicKey_;
      Name = other.Name;
      Nickname = other.Nickname;
      currentPlan_ = other.currentPlan_ != null ? other.currentPlan_.Clone() : null;
      profilePicture_ = other.profilePicture_;
      aesKey_ = other.aesKey_;
      FollowSecret = other.FollowSecret;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedUserDaoV1 Clone() {
      return new FeedUserDaoV1(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::LiftLog.Ui.Models.UuidDao id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.UuidDao Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "lookup" field.</summary>
    public const int LookupFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_lookup_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string lookup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lookup {
      get { return lookup_; }
      set {
        lookup_ = value;
      }
    }


    /// <summary>Field number for the "public_key" field.</summary>
    public const int PublicKeyFieldNumber = 8;
    private pb::ByteString publicKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PublicKey {
      get { return publicKey_; }
      set {
        publicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_name_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }


    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _single_nickname_codec = pb::FieldCodec.ForClassWrapper<string>(50);
    private string nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = value;
      }
    }


    /// <summary>Field number for the "current_plan" field.</summary>
    public const int CurrentPlanFieldNumber = 3;
    private global::LiftLog.Ui.Models.CurrentPlanDaoV1 currentPlan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.CurrentPlanDaoV1 CurrentPlan {
      get { return currentPlan_; }
      set {
        currentPlan_ = value;
      }
    }

    /// <summary>Field number for the "profile_picture" field.</summary>
    public const int ProfilePictureFieldNumber = 4;
    private pb::ByteString profilePicture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProfilePicture {
      get { return profilePicture_ ?? pb::ByteString.Empty; }
      set {
        profilePicture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "profile_picture" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasProfilePicture {
      get { return profilePicture_ != null; }
    }
    /// <summary>Clears the value of the "profile_picture" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearProfilePicture() {
      profilePicture_ = null;
    }

    /// <summary>Field number for the "aes_key" field.</summary>
    public const int AesKeyFieldNumber = 5;
    private pb::ByteString aesKey_;
    /// <summary>
    /// These will be null until the user accepts the follow request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AesKey {
      get { return aesKey_ ?? pb::ByteString.Empty; }
      set {
        aesKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "aes_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAesKey {
      get { return aesKey_ != null; }
    }
    /// <summary>Clears the value of the "aes_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAesKey() {
      aesKey_ = null;
    }

    /// <summary>Field number for the "follow_secret" field.</summary>
    public const int FollowSecretFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_followSecret_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string followSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FollowSecret {
      get { return followSecret_; }
      set {
        followSecret_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedUserDaoV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedUserDaoV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Lookup != other.Lookup) return false;
      if (PublicKey != other.PublicKey) return false;
      if (Name != other.Name) return false;
      if (Nickname != other.Nickname) return false;
      if (!object.Equals(CurrentPlan, other.CurrentPlan)) return false;
      if (ProfilePicture != other.ProfilePicture) return false;
      if (AesKey != other.AesKey) return false;
      if (FollowSecret != other.FollowSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (lookup_ != null) hash ^= Lookup.GetHashCode();
      if (PublicKey.Length != 0) hash ^= PublicKey.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (nickname_ != null) hash ^= Nickname.GetHashCode();
      if (currentPlan_ != null) hash ^= CurrentPlan.GetHashCode();
      if (HasProfilePicture) hash ^= ProfilePicture.GetHashCode();
      if (HasAesKey) hash ^= AesKey.GetHashCode();
      if (followSecret_ != null) hash ^= FollowSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (name_ != null) {
        _single_name_codec.WriteTagAndValue(output, Name);
      }
      if (currentPlan_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CurrentPlan);
      }
      if (HasProfilePicture) {
        output.WriteRawTag(34);
        output.WriteBytes(ProfilePicture);
      }
      if (HasAesKey) {
        output.WriteRawTag(42);
        output.WriteBytes(AesKey);
      }
      if (nickname_ != null) {
        _single_nickname_codec.WriteTagAndValue(output, Nickname);
      }
      if (followSecret_ != null) {
        _single_followSecret_codec.WriteTagAndValue(output, FollowSecret);
      }
      if (PublicKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(PublicKey);
      }
      if (lookup_ != null) {
        _single_lookup_codec.WriteTagAndValue(output, Lookup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (lookup_ != null) {
        size += _single_lookup_codec.CalculateSizeWithTag(Lookup);
      }
      if (PublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PublicKey);
      }
      if (name_ != null) {
        size += _single_name_codec.CalculateSizeWithTag(Name);
      }
      if (nickname_ != null) {
        size += _single_nickname_codec.CalculateSizeWithTag(Nickname);
      }
      if (currentPlan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CurrentPlan);
      }
      if (HasProfilePicture) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProfilePicture);
      }
      if (HasAesKey) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AesKey);
      }
      if (followSecret_ != null) {
        size += _single_followSecret_codec.CalculateSizeWithTag(FollowSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedUserDaoV1 other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::LiftLog.Ui.Models.UuidDao();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.lookup_ != null) {
        if (lookup_ == null || other.Lookup != "") {
          Lookup = other.Lookup;
        }
      }
      if (other.PublicKey.Length != 0) {
        PublicKey = other.PublicKey;
      }
      if (other.name_ != null) {
        if (name_ == null || other.Name != "") {
          Name = other.Name;
        }
      }
      if (other.nickname_ != null) {
        if (nickname_ == null || other.Nickname != "") {
          Nickname = other.Nickname;
        }
      }
      if (other.currentPlan_ != null) {
        if (currentPlan_ == null) {
          CurrentPlan = new global::LiftLog.Ui.Models.CurrentPlanDaoV1();
        }
        CurrentPlan.MergeFrom(other.CurrentPlan);
      }
      if (other.HasProfilePicture) {
        ProfilePicture = other.ProfilePicture;
      }
      if (other.HasAesKey) {
        AesKey = other.AesKey;
      }
      if (other.followSecret_ != null) {
        if (followSecret_ == null || other.FollowSecret != "") {
          FollowSecret = other.FollowSecret;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::LiftLog.Ui.Models.UuidDao();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            string value = _single_name_codec.Read(input);
            if (name_ == null || value != "") {
              Name = value;
            }
            break;
          }
          case 26: {
            if (currentPlan_ == null) {
              CurrentPlan = new global::LiftLog.Ui.Models.CurrentPlanDaoV1();
            }
            input.ReadMessage(CurrentPlan);
            break;
          }
          case 34: {
            ProfilePicture = input.ReadBytes();
            break;
          }
          case 42: {
            AesKey = input.ReadBytes();
            break;
          }
          case 50: {
            string value = _single_nickname_codec.Read(input);
            if (nickname_ == null || value != "") {
              Nickname = value;
            }
            break;
          }
          case 58: {
            string value = _single_followSecret_codec.Read(input);
            if (followSecret_ == null || value != "") {
              FollowSecret = value;
            }
            break;
          }
          case 66: {
            PublicKey = input.ReadBytes();
            break;
          }
          case 74: {
            string value = _single_lookup_codec.Read(input);
            if (lookup_ == null || value != "") {
              Lookup = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class CurrentPlanDaoV1 : pb::IMessage<CurrentPlanDaoV1> {
    private static readonly pb::MessageParser<CurrentPlanDaoV1> _parser = new pb::MessageParser<CurrentPlanDaoV1>(() => new CurrentPlanDaoV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CurrentPlanDaoV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiftLog.Ui.Models.FeedStateDaoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrentPlanDaoV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrentPlanDaoV1(CurrentPlanDaoV1 other) : this() {
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CurrentPlanDaoV1 Clone() {
      return new CurrentPlanDaoV1(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2> sessions_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.SessionBlueprintDao.SessionBlueprintDaoV2> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CurrentPlanDaoV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CurrentPlanDaoV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CurrentPlanDaoV1 other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedItemDaoV1 : pb::IMessage<FeedItemDaoV1> {
    private static readonly pb::MessageParser<FeedItemDaoV1> _parser = new pb::MessageParser<FeedItemDaoV1>(() => new FeedItemDaoV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedItemDaoV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiftLog.Ui.Models.FeedStateDaoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemDaoV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemDaoV1(FeedItemDaoV1 other) : this() {
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      eventId_ = other.eventId_ != null ? other.eventId_.Clone() : null;
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Session:
          Session = other.Session.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedItemDaoV1 Clone() {
      return new FeedItemDaoV1(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private global::LiftLog.Ui.Models.UuidDao userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.UuidDao UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private global::LiftLog.Ui.Models.UuidDao eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.UuidDao EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expiry {
      get { return expiry_; }
      set {
        expiry_ = value;
      }
    }

    /// <summary>Field number for the "session" field.</summary>
    public const int SessionFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.SessionHistoryDao.SessionDaoV2 Session {
      get { return payloadCase_ == PayloadOneofCase.Session ? (global::LiftLog.Ui.Models.SessionHistoryDao.SessionDaoV2) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Session;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Session = 5,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedItemDaoV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedItemDaoV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserId, other.UserId)) return false;
      if (!object.Equals(EventId, other.EventId)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Expiry, other.Expiry)) return false;
      if (!object.Equals(Session, other.Session)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (eventId_ != null) hash ^= EventId.GetHashCode();
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      if (expiry_ != null) hash ^= Expiry.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Session) hash ^= Session.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserId);
      }
      if (eventId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventId);
      }
      if (timestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Timestamp);
      }
      if (expiry_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expiry);
      }
      if (payloadCase_ == PayloadOneofCase.Session) {
        output.WriteRawTag(42);
        output.WriteMessage(Session);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (eventId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventId);
      }
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (expiry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
      }
      if (payloadCase_ == PayloadOneofCase.Session) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Session);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedItemDaoV1 other) {
      if (other == null) {
        return;
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          UserId = new global::LiftLog.Ui.Models.UuidDao();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.eventId_ != null) {
        if (eventId_ == null) {
          EventId = new global::LiftLog.Ui.Models.UuidDao();
        }
        EventId.MergeFrom(other.EventId);
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      if (other.expiry_ != null) {
        if (expiry_ == null) {
          Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expiry.MergeFrom(other.Expiry);
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Session:
          if (Session == null) {
            Session = new global::LiftLog.Ui.Models.SessionHistoryDao.SessionDaoV2();
          }
          Session.MergeFrom(other.Session);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userId_ == null) {
              UserId = new global::LiftLog.Ui.Models.UuidDao();
            }
            input.ReadMessage(UserId);
            break;
          }
          case 18: {
            if (eventId_ == null) {
              EventId = new global::LiftLog.Ui.Models.UuidDao();
            }
            input.ReadMessage(EventId);
            break;
          }
          case 26: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 34: {
            if (expiry_ == null) {
              Expiry = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Expiry);
            break;
          }
          case 42: {
            global::LiftLog.Ui.Models.SessionHistoryDao.SessionDaoV2 subBuilder = new global::LiftLog.Ui.Models.SessionHistoryDao.SessionDaoV2();
            if (payloadCase_ == PayloadOneofCase.Session) {
              subBuilder.MergeFrom(Session);
            }
            input.ReadMessage(subBuilder);
            Session = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class FeedStateDaoV1 : pb::IMessage<FeedStateDaoV1> {
    private static readonly pb::MessageParser<FeedStateDaoV1> _parser = new pb::MessageParser<FeedStateDaoV1>(() => new FeedStateDaoV1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeedStateDaoV1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LiftLog.Ui.Models.FeedStateDaoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedStateDaoV1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedStateDaoV1(FeedStateDaoV1 other) : this() {
      feedItems_ = other.feedItems_.Clone();
      followedUsers_ = other.followedUsers_.Clone();
      identity_ = other.identity_ != null ? other.identity_.Clone() : null;
      followRequests_ = other.followRequests_.Clone();
      followers_ = other.followers_.Clone();
      unpublishedSessionIds_ = other.unpublishedSessionIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeedStateDaoV1 Clone() {
      return new FeedStateDaoV1(this);
    }

    /// <summary>Field number for the "feed_items" field.</summary>
    public const int FeedItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.FeedItemDaoV1> _repeated_feedItems_codec
        = pb::FieldCodec.ForMessage(10, global::LiftLog.Ui.Models.FeedItemDaoV1.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.FeedItemDaoV1> feedItems_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.FeedItemDaoV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.FeedItemDaoV1> FeedItems {
      get { return feedItems_; }
    }

    /// <summary>Field number for the "followed_users" field.</summary>
    public const int FollowedUsersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.FeedUserDaoV1> _repeated_followedUsers_codec
        = pb::FieldCodec.ForMessage(18, global::LiftLog.Ui.Models.FeedUserDaoV1.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1> followedUsers_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1> FollowedUsers {
      get { return followedUsers_; }
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 3;
    private global::LiftLog.Ui.Models.FeedIdentityDaoV1 identity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LiftLog.Ui.Models.FeedIdentityDaoV1 Identity {
      get { return identity_; }
      set {
        identity_ = value;
      }
    }

    /// <summary>Field number for the "follow_requests" field.</summary>
    public const int FollowRequestsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.InboxMessageDao> _repeated_followRequests_codec
        = pb::FieldCodec.ForMessage(34, global::LiftLog.Ui.Models.InboxMessageDao.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.InboxMessageDao> followRequests_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.InboxMessageDao>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.InboxMessageDao> FollowRequests {
      get { return followRequests_; }
    }

    /// <summary>Field number for the "followers" field.</summary>
    public const int FollowersFieldNumber = 5;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.FeedUserDaoV1> _repeated_followers_codec
        = pb::FieldCodec.ForMessage(42, global::LiftLog.Ui.Models.FeedUserDaoV1.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1> followers_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.FeedUserDaoV1> Followers {
      get { return followers_; }
    }

    /// <summary>Field number for the "unpublished_session_ids" field.</summary>
    public const int UnpublishedSessionIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::LiftLog.Ui.Models.UuidDao> _repeated_unpublishedSessionIds_codec
        = pb::FieldCodec.ForMessage(50, global::LiftLog.Ui.Models.UuidDao.Parser);
    private readonly pbc::RepeatedField<global::LiftLog.Ui.Models.UuidDao> unpublishedSessionIds_ = new pbc::RepeatedField<global::LiftLog.Ui.Models.UuidDao>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LiftLog.Ui.Models.UuidDao> UnpublishedSessionIds {
      get { return unpublishedSessionIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeedStateDaoV1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeedStateDaoV1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!feedItems_.Equals(other.feedItems_)) return false;
      if(!followedUsers_.Equals(other.followedUsers_)) return false;
      if (!object.Equals(Identity, other.Identity)) return false;
      if(!followRequests_.Equals(other.followRequests_)) return false;
      if(!followers_.Equals(other.followers_)) return false;
      if(!unpublishedSessionIds_.Equals(other.unpublishedSessionIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= feedItems_.GetHashCode();
      hash ^= followedUsers_.GetHashCode();
      if (identity_ != null) hash ^= Identity.GetHashCode();
      hash ^= followRequests_.GetHashCode();
      hash ^= followers_.GetHashCode();
      hash ^= unpublishedSessionIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      feedItems_.WriteTo(output, _repeated_feedItems_codec);
      followedUsers_.WriteTo(output, _repeated_followedUsers_codec);
      if (identity_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Identity);
      }
      followRequests_.WriteTo(output, _repeated_followRequests_codec);
      followers_.WriteTo(output, _repeated_followers_codec);
      unpublishedSessionIds_.WriteTo(output, _repeated_unpublishedSessionIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += feedItems_.CalculateSize(_repeated_feedItems_codec);
      size += followedUsers_.CalculateSize(_repeated_followedUsers_codec);
      if (identity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identity);
      }
      size += followRequests_.CalculateSize(_repeated_followRequests_codec);
      size += followers_.CalculateSize(_repeated_followers_codec);
      size += unpublishedSessionIds_.CalculateSize(_repeated_unpublishedSessionIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeedStateDaoV1 other) {
      if (other == null) {
        return;
      }
      feedItems_.Add(other.feedItems_);
      followedUsers_.Add(other.followedUsers_);
      if (other.identity_ != null) {
        if (identity_ == null) {
          Identity = new global::LiftLog.Ui.Models.FeedIdentityDaoV1();
        }
        Identity.MergeFrom(other.Identity);
      }
      followRequests_.Add(other.followRequests_);
      followers_.Add(other.followers_);
      unpublishedSessionIds_.Add(other.unpublishedSessionIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            feedItems_.AddEntriesFrom(input, _repeated_feedItems_codec);
            break;
          }
          case 18: {
            followedUsers_.AddEntriesFrom(input, _repeated_followedUsers_codec);
            break;
          }
          case 26: {
            if (identity_ == null) {
              Identity = new global::LiftLog.Ui.Models.FeedIdentityDaoV1();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 34: {
            followRequests_.AddEntriesFrom(input, _repeated_followRequests_codec);
            break;
          }
          case 42: {
            followers_.AddEntriesFrom(input, _repeated_followers_codec);
            break;
          }
          case 50: {
            unpublishedSessionIds_.AddEntriesFrom(input, _repeated_unpublishedSessionIds_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
